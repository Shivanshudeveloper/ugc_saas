{"pageProps":{"article":{"content":"\r\n# Internationalization\r\n\r\nSupporting multiple languages may represent an important feature for your app. To have this enabled\r\nthe app uses\r\n`i18next` framework. Read more about it [here](https://www.i18next.com/).\r\n\r\n## How it works\r\n\r\nYou might need to change all instances of inline text in any components to be wrapped with the `t()`\r\nfunction as presented below.\r\n\r\nThe library needs a configuration and initialization file, in this case, `src/i18n.js` file.\r\n\r\nFirst step is to declare the app translations as resources.\r\n\r\n```js\r\nconst resources = {\r\n  en: {\r\n    translation: {\r\n      'Welcome to React': 'Welcome to React and react-i18next'\r\n    }\r\n  },\r\n  fr: {\r\n    translation: {\r\n      'Welcome to React': 'Bienvenue Ã  React et react-i18next'\r\n    }\r\n  },\r\n  es: {\r\n    translation: {\r\n      'Welcome to React': 'Bienvenido a React and react-i18next'\r\n    }\r\n  },\r\n  // ...\r\n};\r\n```\r\n\r\nThese translations need to be passed in the `i18n.init()` function to make them available\r\ninside `App` components tree using the `useTranslation` hook.\r\n\r\n```jsx\r\n// src/pages/index.js\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <h1>\r\n      {t('Welcome to React')}\r\n    </h1>\r\n  );\r\n}\r\n```\r\n\r\nFor all configuration options, please follow the\r\n[official documentation](https://www.i18next.com/overview/configuration-options).\r\n\r\n## Removing internationalization support\r\n\r\n1. Remove `import './i18n` line from `App` component.\r\n2. Remove `i18n.js` configuration file from `src` folder.\r\n3. Remove `LanguagePopover` component since it connects with the library.\r\n3. Uninstall `i18next` and `react-i18next` dependencies.\r\n","slug":"internationalization","title":"Internationalization"}},"__N_SSG":true}